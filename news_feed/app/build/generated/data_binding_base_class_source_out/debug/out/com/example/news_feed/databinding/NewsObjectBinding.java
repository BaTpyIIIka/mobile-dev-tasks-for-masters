// Generated by view binder compiler. Do not edit!
package com.example.news_feed.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.news_feed.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewsObjectBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView newsAuthor;

  @NonNull
  public final ImageView newsImageView;

  @NonNull
  public final TextView newsPublishedDate;

  @NonNull
  public final TextView newsTextDescription;

  @NonNull
  public final TextView newsTitle;

  private NewsObjectBinding(@NonNull RelativeLayout rootView, @NonNull TextView newsAuthor,
      @NonNull ImageView newsImageView, @NonNull TextView newsPublishedDate,
      @NonNull TextView newsTextDescription, @NonNull TextView newsTitle) {
    this.rootView = rootView;
    this.newsAuthor = newsAuthor;
    this.newsImageView = newsImageView;
    this.newsPublishedDate = newsPublishedDate;
    this.newsTextDescription = newsTextDescription;
    this.newsTitle = newsTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewsObjectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewsObjectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.news_object, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewsObjectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView newsAuthor = rootView.findViewById(R.id.news_author);
      if (newsAuthor == null) {
        missingId = "newsAuthor";
        break missingId;
      }
      ImageView newsImageView = rootView.findViewById(R.id.news_image_view);
      if (newsImageView == null) {
        missingId = "newsImageView";
        break missingId;
      }
      TextView newsPublishedDate = rootView.findViewById(R.id.news_published_date);
      if (newsPublishedDate == null) {
        missingId = "newsPublishedDate";
        break missingId;
      }
      TextView newsTextDescription = rootView.findViewById(R.id.news_text_description);
      if (newsTextDescription == null) {
        missingId = "newsTextDescription";
        break missingId;
      }
      TextView newsTitle = rootView.findViewById(R.id.news_title);
      if (newsTitle == null) {
        missingId = "newsTitle";
        break missingId;
      }
      return new NewsObjectBinding((RelativeLayout) rootView, newsAuthor, newsImageView,
          newsPublishedDate, newsTextDescription, newsTitle);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
